{
  "id": "auth-component",
  "name": "Auth Component",
  "repository": "https://github.com/101digital/react-native-auth-component",
  "config": {
    "env": {
      "development": {
        "clientId": "gltBKX0Xvbt5HTRPTPdcuicabRUa",
        "clientSecret": "vCRObVDOb_vlEctFor8X6LFWArca",
        "ternantDomain": "carbon.super",
        "tokenBaseUrl": "https://sandbox.101digital.io/token",
        "membershipBaseUrl": "https://sandbox.101digital.io/membership-service/1.2.1-SNAPSHOT",
        "authGrantType": "password",
        "authScope": "openid",
        "appGrantType": "client_credentials",
        "appScope": "PRODUCTION",
        "redirectUrl": "pay101://outh2_callback",
        "authorizationBaseUrl": "https://sandbox.101digital.io/oauth2/authorize",
        "revocationBaseUrl": "https://sandbox.101digital.io/revoke",
        "endSessionBaseUrl": "https://sandbox.101digital.io/oidc/logout"
      },
      "staging": {
        "clientId": "gltBKX0Xvbt5HTRPTPdcuicabRUa",
        "clientSecret": "vCRObVDOb_vlEctFor8X6LFWArca",
        "ternantDomain": "carbon.super",
        "tokenBaseUrl": "https://sandbox.101digital.io/token",
        "membershipBaseUrl": "https://sandbox.101digital.io/membership-service/1.2.1-SNAPSHOT",
        "authGrantType": "password",
        "authScope": "openid",
        "appGrantType": "client_credentials",
        "appScope": "PRODUCTION",
        "redirectUrl": "pay101://outh2_callback",
        "authorizationBaseUrl": "https://sandbox.101digital.io/oauth2/authorize",
        "revocationBaseUrl": "https://sandbox.101digital.io/revoke",
        "endSessionBaseUrl": "https://sandbox.101digital.io/oidc/logout"
      },
      "production": {
        "clientId": "vpqOwqOIY3l7gD4nzuEPgKgQ5Sca",
        "clientSecret": "VfLff9SrxAwlJMW_TwzkFgnrSm8a",
        "ternantDomain": "carbon.super",
        "tokenBaseUrl": "https://api.101digital.io/token",
        "membershipBaseUrl": "https://api.101digital.io/membership-service/v1.0",
        "authGrantType": "password",
        "authScope": "openid",
        "appGrantType": "client_credentials",
        "appScope": "PRODUCTION",
        "redirectUrl": "pay101://outh2_callback",
        "authorizationBaseUrl": "https://sandbox.101digital.io/oauth2/authorize",
        "revocationBaseUrl": "https://sandbox.101digital.io/revoke",
        "endSessionBaseUrl": "https://sandbox.101digital.io/oidc/logout"
      }
    }
  },
  "dependencies": [{ "name": "https://github.com/101digital/react-native-theme-component.git" }],
  "templates": [
    {
      "id": "login-email-template",
      "templateName": "Login with email template",
      "componentName": "LoginComponent",
      "imports": [
        "import { LoginComponent } from 'react-native-auth-component';",
        "import { ThemeContext } from 'react-native-theme-component';"
      ],
      "headers": ["  const { i18n } = useContext(ThemeContext);"],
      "renders": [
        "      <LoginComponent",
        "        Root={{",
        "          props: {",
        "            i18n: i18n,",
        "            onLoginSuccess: (profile) => {",
        "              $fn-login-success",
        "            },",
        "            onLoginFailed: (error) => {",
        "              $fn-login-failed",
        "            },",
        "            onPressForgotPassword: () => {",
        "              $fn-forgot-password",
        "            },",
        "            onPressRegister: () => {",
        "              $fn-register",
        "            },",
        "          },",
        "        }}",
        "        InputForm={{",
        "          style: { passwordInputFieldStyle: { containerStyle: { marginTop: 24 } } },",
        "          props: {",
        "            type: 'email',",
        "          },",
        "        }}",
        "      />"
      ],
      "functions": [
        {
          "id": "fn-login-success",
          "params": [
            {
              "name": "profile",
              "type": "Profile"
            }
          ]
        },
        {
          "id": "fn-login-failed",
          "params": [
            {
              "name": "error",
              "type": "Error"
            }
          ]
        },
        {
          "id": "fn-forgot-password",
          "params": []
        },
        {
          "id": "fn-register",
          "params": []
        }
      ]
    },
    {
      "id": "login-phonenumber-template",
      "templateName": "Login with phone number template",
      "componentName": "LoginComponent",
      "imports": [
        "import { LoginComponent, LoginComponentRef } from 'react-native-auth-component';",
        "import { CountryPicker, ThemeContext } from 'react-native-theme-component';"
      ],
      "headers": [
        "  const [showCountryPicker, setShowCountryPicker] = useState(false);",
        "  const { deviceCountryCode } = useContext(ThemeContext);",
        "  const loginRefs = useRef<LoginComponentRef>();",
        "",
        "  useEffect(() => {",
        "    if (deviceCountryCode) {",
        "      loginRefs?.current?.updateCountryCode(deviceCountryCode);",
        "    }",
        "  }, [deviceCountryCode]);"
      ],
      "renders": [
        "      <LoginComponent",
        "        ref={loginRefs}",
        "        Root={{",
        "          props: {",
        "            onLoginSuccess: (profile) => {",
        "              $fn-login-success",
        "            },",
        "            onLoginFailed: (error) => {",
        "              $fn-login-failed",
        "            },",
        "            onPressForgotPassword: () => {",
        "              $fn-forgot-password",
        "            },",
        "            onPressRegister: () => {",
        "              $fn-register",
        "            },",
        "          },",
        "        }}",
        "        InputForm={{",
        "          style: { passwordInputFieldStyle: { containerStyle: { marginTop: 24 } } },",
        "          props: {",
        "            onPressDialCode: () => {",
        "              setShowCountryPicker(true);",
        "            },",
        "          },",
        "        }}",
        "      />",
        "      <CountryPicker",
        "        isVisible={showCountryPicker}",
        "        onClose={() => {",
        "          setShowCountryPicker(false);",
        "        }}",
        "        onSelectedCountry={(code) => {",
        "          setShowCountryPicker(false);",
        "          loginRefs.current?.updateCountryCode(code);",
        "        }}",
        "      />"
      ],
      "functions": [
        {
          "id": "fn-login-success",
          "params": [
            {
              "name": "profile",
              "type": "Profile"
            }
          ]
        },
        {
          "id": "fn-login-failed",
          "params": [
            {
              "name": "error",
              "type": "Error"
            }
          ]
        },
        {
          "id": "fn-forgot-password",
          "params": []
        },
        {
          "id": "fn-register",
          "params": []
        }
      ]
    },
    {
      "id": "login-phonenumber-template-2",
      "templateName": "Login with phone number template2",
      "componentName": "LoginComponent",
      "imports": [
        "import { LoginComponent, LoginComponentRef } from 'react-native-auth-component';",
        "import { CountryPicker, ThemeContext } from 'react-native-theme-component';"
      ],
      "headers": [
        "  const [showCountryPicker, setShowCountryPicker] = useState(false);",
        "  const { deviceCountryCode } = useContext(ThemeContext);",
        "  const loginRefs = useRef<LoginComponentRef>();",
        "",
        "  useEffect(() => {",
        "    if (deviceCountryCode) {",
        "      loginRefs?.current?.updateCountryCode(deviceCountryCode);",
        "    }",
        "  }, [deviceCountryCode]);"
      ],
      "renders": [
        "      <LoginComponent",
        "        ref={loginRefs}",
        "        Root={{",
        "          props: {",
        "            onLoginSuccess: (profile) => {",
        "              $fn-login-success",
        "            },",
        "            onLoginFailed: (error) => {",
        "              $fn-login-failed",
        "            },",
        "            onPressForgotPassword: () => {",
        "              $fn-forgot-password",
        "            },",
        "            onPressRegister: () => {",
        "              $fn-register",
        "            },",
        "          },",
        "        }}",
        "        InputForm={{",
        "          component: {",
        "            passwordIcon: <View />,",
        "            usernameIcon: <View />,",
        "          },",
        "          style: {",
        "            passwordInputFieldStyle: {",
        "              containerStyle: { marginTop: 24 },",
        "            },",
        "            userNameInputFieldStyle: {",
        "              contentContainerStyle: {",
        "                borderWidth: 1,",
        "                borderRadius: 5,",
        "                borderBottomWidth: 1,",
        "              },",
        "              inputContainerStyle: {",
        "                height: 42,",
        "              },",
        "              textInputStyle: {",
        "                fontSize: 15,",
        "                color: '#000000',",
        "              },",
        "            },",
        "          },",
        "          props: {",
        "            onPressDialCode: () => {",
        "              setShowCountryPicker(true);",
        "            },",
        "          },",
        "        }}",
        "      />",
        "      <CountryPicker",
        "        isVisible={showCountryPicker}",
        "        onClose={() => {",
        "          setShowCountryPicker(false);",
        "        }}",
        "        onSelectedCountry={(code) => {",
        "          setShowCountryPicker(false);",
        "          loginRefs.current?.updateCountryCode(code);",
        "        }}",
        "      />"
      ],
      "functions": [
        {
          "id": "fn-login-success",
          "params": [
            {
              "name": "profile",
              "type": "Profile"
            }
          ]
        },
        {
          "id": "fn-login-failed",
          "params": [
            {
              "name": "error",
              "type": "Error"
            }
          ]
        },
        {
          "id": "fn-forgot-password",
          "params": []
        },
        {
          "id": "fn-register",
          "params": []
        }
      ]
    },
    {
      "id": "logout-template",
      "templateName": "Simple logout template",
      "componentName": "LoginComponent",
      "imports": [
        "import { AuthContext } from 'react-native-auth-component';",
        "import { Button } from 'react-native-theme-component';"
      ],
      "headers": ["  const { logout } = useContext(AuthContext);"],
      "renders": [
        "      <Button label='LOGOUT' style={{ primaryContainerStyle: { margin: 20 } }} onPress={logout} />"
      ]
    }
  ],
  "texts": {
    "login_component": {
      "lbl_sign_in": "Sign In",
      "lbl_email": "Email",
      "lbl_mobile_number": "Mobile number",
      "lbl_password": "Password",
      "btn_forgot_password": "Forgot password",
      "btn_login": "LOGIN",
      "btn_sign_up": "Sign up here",
      "lbl_not_an_account": "Not a user yet?"
    },
    "change_password": {
      "lbl_change_password": "Change Password",
      "lbl_sub_title": "Enter details below.",
      "lbl_current_password": "Current Password",
      "lbl_new_password": "New Password",
      "lbl_confirm_password": "Confirm New Password",
      "msg_rule_1": "Must be at least 8 characters",
      "msg_rule_2": "Must contain at least 1 number",
      "msg_rule_3": "Must contain at least 1 upper case",
      "msg_rule_4": "Must contain at least 1 special character",
      "plh_current_password": "Enter current password",
      "plh_new_password": "Enter new password",
      "plh_confirm_password": "Re-enter new password",
      "val_enter_valid_password": "Password does not match",
      "lbl_error_title": "Oops!",
      "lbl_error_message": "The current password you entered is invalid. Please try again.",
      "lbl_success_title": "Success!",
      "msg_success": "Success!",
      "btn_success_next": "Proceed to dashboard"
    }
  }
}
